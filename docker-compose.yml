version: '3.5'

services:
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 801:80
    volumes:
      - elements_static_volume:/home/app/elements/static
      - elements_files_volume:/home/app/elements/static
    env_file:
      - .env
    networks:
      - nginx_network
    depends_on:
      - elements

  elements:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py flush --no-input &
                    python manage.py collectstatic &&
                    python manage.py flush --no-input &
                    gunicorn elements.wsgi:application --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - .:/elements
      - elements_static_volume:/elements/static
      - elements_files_volume:/elements/file
    restart: always
    #image: elementsapp
    expose:
      - ${APP_PORT}
    networks:
      - elements_network
      - nginx_network
    depends_on:
      - elements_postgresql

  elements_postgresql:
    container_name: elements_postgresql_container
    image: postgres:12
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - elements_postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - elements_network
    restart: always

networks:
  elements_network:
    external: true
  nginx_network:
    external: true

volumes:
    elements_postgresql:
      external: true
    elements_static_volume:
      external: true
    elements_files_volume:
      external: true